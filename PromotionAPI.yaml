openapi: 3.0.0
info:
  title: Promotion Service Public API
  version: 1.0.0
  description: API for managing promotions and user promotions in the system.

servers:
  - url: http://localhost:8080/api/v1

security:
  - bearerAuth: []

paths:
  /promotions:
    get:
      summary: Get all promotions
      responses:
        '200':
          description: A list of promotions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Promotion'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

    post:
      summary: Create a new promotion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                value:
                  type: number
                conditions:
                  type: object
                description:
                  type: string
                startDate:
                  type: string
                  format: date-time
                endDate:
                  type: string
                  format: date-time
      responses:
        '204':
          description: Promotion created successfully
        '400':
          $ref: '#/components/responses/InvalidInput'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'
    
    delete:
      summary: Delete promotions following filters
      responses:
        '204':
          description: All selected promotions deleted successfully
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'
        
  /promotions/{id}:
    get:
      summary: Get a promotion by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Promotion details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        '404':
          $ref: '#/components/responses/PromotionNotFound'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

    delete:
      summary: Delete a promotion by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Promotion deleted successfully
        '404':
          $ref: '#/components/responses/PromotionNotFound'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

  /user-promotions:
    get:
      summary: Get all user promotions
      responses:
        '200':
          description: A list of user promotions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserPromotion'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: Assign a promotion to a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                promotionId:
                  type: string
                status:
                  type: string
                assignedDate:
                  type: string
                  format: date-time
              required:
                - userId
                - promotionId
      responses:
        '204':
          description: User promotion assigned successfully
        '400':
          $ref: '#/components/responses/InvalidInput'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

    delete:
      summary: Delete user promotions following filters
      responses:
        '204':
          description: All selected user promotions deleted successfully
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'
          
  /user-promotions/{id}:
    
    patch:
      summary: Update a user promotion
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string

      responses:
        '200':
          description: User promotion updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPromotion'
        '400':
          $ref: '#/components/responses/InvalidInput'
        
        '404':
          $ref: '#/components/responses/UserPromotionNotFound'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    Promotion:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum: [LOYALTY, EVENT, SEASONAL]
        value:
          type: number
        conditions:
          type: object
        description:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time

    UserPromotion:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        promotionId:
          type: string
        status:
          type: string
        assignedDate:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: string
        messageEn:
          type: string
        messageVn:
          type: string

  responses:
    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            errorCode: SERVER_ERROR
            messageEn: An unexpected error occurred
            messageVn: Đã xảy ra lỗi không mong muốn

    UnauthorizedError:
      description: Unauthorized access
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            errorCode: UNAUTHORIZED_ACCESS
            messageEn: Unauthorized access
            messageVn: Truy cập không hợp lệ
    
    InvalidInput:
      description: Invalid input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            errorCode: INVALID_INPUT
            messageEn: Invalid request parameters (format example)
            messageVn: Tham số yêu cầu không hợp lệ (ghi ra định dạng mẫu)

    PromotionNotFound:
      description: Promotion not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            errorCode: PROMOTION_NOT_FOUND
            messageEn: Promotion not found
            messageVn: Không tìm thấy khuyến mãi
    
    UserPromotionNotFound:
      description: User promotion not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            errorCode: USER_PROMOTION_NOT_FOUND
            messageEn: User promotion not found
            messageVn: Không tìm thấy khuyến mãi của người dùng

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
