openapi: 3.0.0
info:
  title: Promotion API
  version: 1.0.0
  description: |
    API for managing promotions and user promotions.  
    This API allows:
    - Administrators to create, update, delete, and retrieve promotions.
    - Administrators to assign promotions to users in bulk and view all user promotions.
    - Users to view and assign promotions to themselves.

    **Authentication**: All endpoints require JWT bearer token authentication.
security:
  - bearerAuth: []
tags:
  - name: Promotion
paths:
  /promotions:
    get:
      summary: Get all promotions
      tags: 
      - Promotion
      - Administrative operations
      responses:
        '200':
          description: A list of all promotions
          content:
            application/json:
              schema:
                type: object
                properties:
                  promotions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Promotion'
        '401':
          $ref: '../common/error_responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../common/error_responses.yaml#/components/responses/Forbidden'
        '500':
          $ref: '../common/error_responses.yaml#/components/responses/InternalServerError'
    
    post:
      summary: Create a new promotion
      tags: [Administrative operations]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromotionRequest'
      responses:
        '204':
          description: Promotion created successfully
        '400':
          $ref: '../common/error_responses.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../common/error_responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../common/error_responses.yaml#/components/responses/Forbidden'
        '422':
          $ref: '../common/error_responses.yaml#/components/responses/UnprocessableEntity'
        '500':
          $ref: '../common/error_responses.yaml#/components/responses/InternalServerError'

  /promotions/{id}:
    get:
      summary: Get promotion by ID
      tags: [Promotion]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The unique identifier of the promotion
      responses:
        '200':
          description: Promotion details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
        '401':
          $ref: '../common/error_responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../common/error_responses.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../common/error_responses.yaml#/components/responses/ResourceNotFound'
        '500':
          $ref: '../common/error_responses.yaml#/components/responses/InternalServerError'
    
    put:
      summary: Update promotion by ID
      tags: [Administrative operations]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The unique identifier of the promotion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromotionRequest'
      responses:
        '204':
          description: Promotion updated successfully
        '400':
          $ref: '../common/error_responses.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../common/error_responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../common/error_responses.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../common/error_responses.yaml#/components/responses/ResourceNotFound'
        '422':
          $ref: '../common/error_responses.yaml#/components/responses/UnprocessableEntity'
        '500':
          $ref: '../common/error_responses.yaml#/components/responses/InternalServerError'        

    delete:
      summary: Delete promotion by ID
      tags: [Administrative operations]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The unique identifier of the promotion
      responses:
        '204':
          description: Promotion deleted successfully
        '401':
          $ref: '../common/error_responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../common/error_responses.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../common/error_responses.yaml#/components/responses/ResourceNotFound'
        '422':
          $ref: '../common/error_responses.yaml#/components/responses/UnprocessableEntity'
        '500':
          $ref: '../common/error_responses.yaml#/components/responses/InternalServerError'


  /user-promotions:
    
    get:
      summary: Get all user promotions
      tags:
        - Administrative operations
      responses:
        '200':
          description: A list of user promotions
          content:
            application/json:
              schema:
                type: object
                properties:
                  userPromotions:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserPromotion'
        '401':
          $ref: '../common/error_responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../common/error_responses.yaml#/components/responses/Forbidden'
        '500':
          $ref: '../common/error_responses.yaml#/components/responses/InternalServerError'

  /user-promotions/bulks:
    post:
      summary: Assign multiple promotions to users in bulk
      tags: [Administrative operations]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                assignments:
                  type: array
                  items:
                    $ref: '#/components/schemas/UserPromotionAssignRequest'
      responses:
        '204':
          description: Promotions assigned to users successfully
        '400':
          $ref: '../common/error_responses.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../common/error_responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../common/error_responses.yaml#/components/responses/Forbidden'
        '422':
          $ref: '../common/error_responses.yaml#/components/responses/UnprocessableEntity'
        '500':
          $ref: '../common/error_responses.yaml#/components/responses/InternalServerError'

  /user-promotions/me:
    get:
      summary: Get promotions assigned to the authenticated user
      tags: [Promotion]
      responses:
        '200':
          description: A list of promotions assigned to the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  userPromotions:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserPromotion'
        '401':
          $ref: '../common/error_responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../common/error_responses.yaml#/components/responses/Forbidden'
        '500':
          $ref: '../common/error_responses.yaml#/components/responses/InternalServerError'

    post:
      summary: Assign a promotion to the authenticated user
      tags: [Promotion]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPromotionAssignRequest'
      responses:
        '204':
          description: Promotion assigned to user successfully
        '400':
          $ref: '../common/error_responses.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../common/error_responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../common/error_responses.yaml#/components/responses/Forbidden'
        '422':
          $ref: '../common/error_responses.yaml#/components/responses/UnprocessableEntity'
        '500':
          $ref: '../common/error_responses.yaml#/components/responses/InternalServerError'


components:
  schemas:
    Promotion:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum: [LOYALTY, EVENT, SEASONAL]
        value:
          type: number
        conditions:
          type: object
        description:
          type: string

        status:
          type: string
          enum: [ACTIVE, INACTIVE]

        startDate:
          type: string
          format: date-time

        endDate:
          type: string
          format: date-time
        
        createdAt:
          type: string
          format: date-time

    PromotionRequest:
      type: object
      properties:
        type:
          type: string
        value:
          type: number
        conditions:
          type: object
        description:
          type: string
        status:
          type: string
          enum: [ACTIVE, INACTIVE]
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
      required:
        - type
        - value
        - startDate
        - endDate
    UserPromotion:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
        promotionId:
          type: string
        status:
          type: string
        assignedDate:
          type: string
          format: date-time
    UserPromotionAssignRequest:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        promotionId:
          type: string
          format: uuid
        status:
          type: string
        assignedDate:
          type: string
          format: date-time
      required:
        - userId
        - promotionId

  securitySchemes:
    bearerAuth:
      $ref: '../common/security_schemes.yaml#/components/securitySchemes/bearerAuth'
