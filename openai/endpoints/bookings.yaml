openapi: 3.0.0
info:
  title: Booking API
  version: 1.0.0
  description: |
    API endpoints for both renter and driver applications to view and update the status of their bookings.
    - **Renters** can create bookings and cancel them **as long as no driver has accepted yet**.
    - **Drivers** can confirm when a trip has been completed.


servers:
  - url: http://localhost:8080/api/v1

security:
  - bearerAuth: []

tags:
  - name: BOOKING
paths:
  /bookings:
    get:
      summary: Get list of bookings
      tags: [BOOKING]
      description: |
        Returns bookings with fields depending on the user role and booking status:

        - **Renter**:
          - When status is `PENDING` or `CONFIRMED`: response includes `driver` object
          - When status is `CANCELLED` or `COMPLETED`: `driver` will be omitted

        - **Driver**:
          - When status is `PENDING` or `CONFIRMED`: response includes `renter` object
          - When status is `CANCELLED` or `COMPLETED`: `renter` will be omitted

        - **Admin**:
          - Always sees both `renter` and `driver` regardless of status
      parameters:
        - $ref: '../common/parameters.yaml#/components/parameters/CurrentPage'
        - $ref: '../common/parameters.yaml#/components/parameters/ItemsPerPage'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookings:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/BookingForRenter'
                        - $ref: '#/components/schemas/BookingForDriver'
                        - $ref: '#/components/schemas/BookingForAdmin'
                  pagination:
                    $ref: '../common/schemas.yaml#/components/schemas/Pagination'
        '401':
          $ref: '../common/error_responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../common/error_responses.yaml#/components/responses/Forbidden'
        '500':
          $ref: '../common/error_responses.yaml#/components/responses/InternalServerError'

    post:
      summary: Create a new booking
      tags: [BOOKING]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pickup:
                  type: string
                dropoff:
                  type: string
                note:
                  type: string
                promotionId:
                  type: string                
              required:
                - pickup
                - dropoff
      responses:
        '201':
          description: Booking created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingForRenter'
        '400':
          $ref: '../common/error_responses.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../common/error_responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../common/error_responses.yaml#/components/responses/Forbidden'
        '422':
          $ref: '../common/error_responses.yaml#/components/responses/UnprocessableEntity'
        '500':
          $ref: '../common/error_responses.yaml#/components/responses/InternalServerError'  
  
  /bookings/{bookingId}:
    get:
      summary: Get booking details by ID
      tags: [BOOKING]
      parameters:
        - in: path
          name: bookingId
          required: true
          schema:
            type: string
          description: ID of the booking to retrieve
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/BookingForRenter'
                  - $ref: '#/components/schemas/BookingForDriver'
                  - $ref: '#/components/schemas/BookingForAdmin'
        '401':
          $ref: '../common/error_responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../common/error_responses.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../common/error_responses.yaml#/components/responses/ResourceNotFound'
        '500':
          $ref: '../common/error_responses.yaml#/components/responses/InternalServerError'

    patch:
      summary: Update booking (supports cancel action)
      tags: [BOOKING]      
      parameters:
        - in: path
          name: bookingId
          required: true
          schema:
            type: string
          description: ID of the booking to update

      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CancelBookingRequest'
                - $ref: '#/components/schemas/CompleteBookingRequest'
              example:
                action: "cancel"
                data:
                  cancelReason: "Change of travel plans"
      
      responses:
        '204':
          description: Booking updated successfully
        '400':
          $ref: '../common/error_responses.yaml#/components/responses/BadRequest'
        '401':
          $ref: '../common/error_responses.yaml#/components/responses/Unauthorized'
        '403':
          $ref: '../common/error_responses.yaml#/components/responses/Forbidden'
        '404':
          $ref: '../common/error_responses.yaml#/components/responses/ResourceNotFound'
        '422':
          $ref: '../common/error_responses.yaml#/components/responses/UnprocessableEntity'
        '500':
          $ref: '../common/error_responses.yaml#/components/responses/InternalServerError'
  

components:
  schemas:  
    BookingCommon:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum: [PENDING, CONFIRMED, CANCELLED, COMPLETED]
          description: |
            Represents the current status of the booking.
            
            - **PENDING** – The booking request has been created and is waiting for driver responses.
            - **CONFIRMED** – The booking has been accepted by a driver and is now active.
            - **CANCELLED** – The booking has been cancelled, either by the user or the system.
            - **COMPLETED** – The booking has been successfully finished.
        pickup:
          type: string
        dropoff:
          type: string
        note:
          type: string
        cancelBy:
          type: string
          enum: [RENTER, DRIVER]
        cancelReason:
          type: string
        cancelAt:
          type: string
          format: date-time
        baseAmount:
          type: number
        discountAmount:
          type: number
        totalAmount:
          type: number
        promotionId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    
    BookingForRenter:
      allOf:
        - $ref: '#/components/schemas/BookingCommon'
        - type: object
          properties:
            driver:
              $ref: '#/components/schemas/Driver'
          description: |
            Includes driver only if status is PENDING or CONFIRMED.  
            Otherwise, `driver` is omitted.
    
    BookingForDriver:
      allOf:
        - $ref: '#/components/schemas/BookingCommon'
        - type: object
          properties:
            renter:
              $ref: '#/components/schemas/Renter'
          description: |
            Includes renter only if status is PENDING or CONFIRMED.  
            Otherwise, `renter` is omitted.
    
    BookingForAdmin:
      allOf:
        - $ref: '#/components/schemas/BookingCommon'
        - type: object
          properties:
            renterId:
              type: string
            driverId:
              type: string
          description: |
            Always includes both renter and driver, regardless of status.


    CancelBookingRequest:
      type: object
      properties:
        action:
          type: string
          enum: [cancel]
        data:
          type: object
          properties:
            cancelReason:
              type: string
          required:
            - cancelReason
      required:
        - action
        - data

    CompleteBookingRequest:
      type: object
      properties:
        action:
          type: string
          enum: [complete]
      required:
        - action

    Renter:
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
    
    Driver:
      type: object
      properties:
        name:
          type: string
        avatar:
          type: string
          format: uri
        phone:
          type: string
        rating:
          type: number
          format: float
          minimum: 0
          maximum: 5
        licensePlate:
          type: string
  
  securitySchemes:
    bearerAuth:
      $ref: '../common/security_schemes.yaml#/components/securitySchemes/bearerAuth'