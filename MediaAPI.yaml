openapi: 3.0.0
info:
  title: Media API
  version: 1.0.0
  description: API for managing media files in the system.
servers:
  - url: http://localhost:8080/api/v1

security:
  - bearerAuth: []

paths:
  /media:
    post:
      summary: Upload a media file
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Media file uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

    delete:
      summary: Delete a media file
      parameters:
        - in: query
          name: id
          schema:
            type: string
          required: true
          description: ID of the media file to delete
      responses:
        '204':
          description: Media file deleted successfully
        '400':
          $ref: '#/components/responses/InvalidInput'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

  /media/{id}:

    get:
      summary: Get media file details by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the media file
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'

    delete:
      summary: delete media by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the media file
      responses:
        '204':
          description: Media file deleted successfully
        '403':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/ServerError'
        
components:
  schemas:
    Media:
      type: object
      properties:
        id:
          type: string
        filename:
          type: string
        size:
          type: number
        path:
          type: string
        type:
          type: string
        extension:
          type: string

    ErrorResponse:
      type: object
      properties:
        errorCode:
          type: string
        messageEn:
          type: string
        messageVn:
          type: string
  
  responses:
    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            errorCode: SERVER_ERROR
            messageEn: An unexpected error occurred
            messageVn: Đã xảy ra lỗi không mong muốn

    UnauthorizedError:
      description: Unauthorized access
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            errorCode: UNAUTHORIZED_ACCESS
            messageEn: Unauthorized access
            messageVn: Truy cập không hợp lệ
    
    InvalidInput:
      description: Invalid input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            errorCode: INVALID_INPUT
            messageEn: Invalid request parameters (format example)
            messageVn: Tham số yêu cầu không hợp lệ (ghi ra định dạng mẫu)

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
